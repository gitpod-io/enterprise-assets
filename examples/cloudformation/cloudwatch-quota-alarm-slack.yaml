AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudWatch alarms for AWS Service Quotas monitoring"

Parameters:
  EC2QuotaThreshold:
    Type: Number
    Description: "Threshold percentage for EC2 quota utilization"
    Default: 80
    MinValue: 1
    MaxValue: 100
  SlackWorkspaceId:
    Type: String
    Description: "Slack workspace ID"
  SlackChannelId:
    Type: String
    Description: "Slack channel ID"

Resources:
  QuotaAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "AWS Service Quotas Alerts"
      TopicName: "service-quotas-alerts"

  QuotaAlertsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action: sns:Publish
            Resource: !Ref QuotaAlertsTopic
      Topics:
        - !Ref QuotaAlertsTopic

  SlackChannelConfiguration:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: !Sub "${AWS::StackName}-${AWS::Region}-quota-alerts"
      IamRoleArn: !GetAtt ChatbotRole.Arn
      SlackWorkspaceId: !Ref SlackWorkspaceId
      SlackChannelId: !Ref SlackChannelId
      GuardrailPolicies:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      SnsTopicArns:
        - !Ref QuotaAlertsTopic
      LoggingLevel: ERROR

  EC2vCPUQuotaAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ec2-vcpu-utilization"
      AlarmDescription: !Sub "Alarm when EC2 vCPU utilization exceeds ${EC2QuotaThreshold}%"
      ActionsEnabled: true
      AlarmActions:
        - !Ref QuotaAlertsTopic
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: !Ref EC2QuotaThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Metrics:
        - Id: usage_data
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Usage
              MetricName: ResourceCount
              Dimensions:
                - Name: Class
                  Value: Standard/OnDemand
                - Name: Resource
                  Value: vCPU
                - Name: Service
                  Value: EC2
                - Name: Type
                  Value: Resource
            Period: 300
            Stat: Maximum
        - Id: pct_utilization
          Label: "% Utilization"
          ReturnData: true
          Expression: "(usage_data/SERVICE_QUOTA(usage_data))*100"

  ChatbotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: ChatbotSNSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:GetTopicAttributes
                  - sns:ListSubscriptionsByTopic
                  - sns:Subscribe
                Resource: !Ref QuotaAlertsTopic

Outputs:
  SNSTopicARN:
    Description: "ARN of the SNS topic"
    Value: !Ref QuotaAlertsTopic
  LogGroupName:
    Description: "Name of the CloudWatch Log Group for alerts"
    Value: !Ref QuotaAlarmsLogGroup
